name: Drupal Composer Template

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # - name: Validate composer.json and composer.lock
    #   run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --ignore-platform-reqs -v --no-interaction

    - name: Add SHORT_SHA env property with commit short sha
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

    - name: Build image
      run: |
        echo "${{ secrets.GH_BUILD_TOKEN }}" | docker login -u "${{ secrets.GH_UNAME }}" --password-stdin "${{ secrets.GH_CR_REPO }}"
        docker build . --file build_conf/Dockerfile --tag ${{ secrets.GH_CR_REPO }}/${{ secrets.GH_UNAME }}/${{ github.event.repository.name }}:$SHORT_SHA
        docker push ${{ secrets.GH_CR_REPO }}/${{ secrets.GH_UNAME }}/${{ github.event.repository.name }}:$SHORT_SHA
    
    
    
       #echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin docker.io
        #docker build . --file build_conf/Dockerfile --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:$SHORT_SHA
        #docker push docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:$SHORT_SHA
    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
